import React, { useEffect, useState } from 'react';
import './AllBooks.scss';
import { NavLink } from 'react-router-dom';
import { useDispatch, useSelector } from 'react-redux';

const AllBooks = () => {
  const [itemsToShow, setItemsToShow] = useState(4);
  const [expanded, setExpanded] = useState(false);
  const dispatch = useDispatch();
  const books = useSelector((state) => state.books.books);
  const searchingBook = useSelector((state) => state.addToSearch.book);
  const [filteredBooks, setFilteredBooks] = useState(null);
  const takenBooks = useSelector((state) => state.takenBooks.takenBooks);
  const waitingForBooks = useSelector((state) => state.waitingForBooks.waitingForBooks);

  useEffect(() => {
    const fetchData = async () => {
      const res = await fetch('https://fox-library-api.herokuapp.com/api/library');
      const response = await res.json();
      dispatch({ type: 'SET_BOOKS', payload: response });
    };
    fetchData();
  }, []);

  useEffect(() => {
    setFilteredBooks(
      searchingBook === null
        ? books
        : books?.filter(
            (item) =>
              item.name.toLowerCase().includes(searchingBook.toLowerCase()) ||
              item.author.toLowerCase().includes(searchingBook.toLowerCase())
          )
    );
  }, [searchingBook]);

  const showMore = (e) => {
    e.preventDefault();
    if (itemsToShow === 4) {
      setItemsToShow(books.length);
      setExpanded(true);
    } else {
      setItemsToShow(4);
      setExpanded(false);
    }
  };

  return (
    <div className="all-books">
      <h2 className="all-books-header">All books</h2>
      <div className="block block-grid">
        {filteredBooks?.slice(0, itemsToShow).map((item, key) => (
          <div className="card" key={key}>
            <div className="card-body">
              <div className="card-img">
                <NavLink to={`/${item.id}`}>
                  <img className="img" src={item.imageUrl} alt={item.name} />
                </NavLink>
              </div>
              <div className="card-content">
                <div
                  className="card-available"
                  style={{ display: takenBooks.find((i) => i.id === item.id) ? 'none' : 'block' }}
                >
                  <svg
                    width="100"
                    height="26"
                    viewBox="0 0 100 26"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <rect
                      x="1"
                      y="1"
                      width="98"
                      height="24"
                      rx="12"
                      fill="white"
                      stroke="#85C8EE"
                      strokeWidth="2"
                    />
                    <path
                      d="M31.4453 18L30.5898 15.6211H27.3145L26.4766 18H25L28.2051 9.39844H29.7285L32.9336 18H31.4453ZM30.2207 14.4141L29.418 12.082C29.3594 11.9258 29.2773 11.6797 29.1719 11.3438C29.0703 11.0078 29 10.7617 28.9609 10.6055C28.8555 11.0859 28.7012 11.6113 28.498 12.1816L27.7246 14.4141H30.2207ZM35.3945 18L32.9336 11.5195H34.3867L35.7051 15.2871C35.9316 15.9199 36.0684 16.4316 36.1152 16.8223H36.1621C36.1973 16.541 36.334 16.0293 36.5723 15.2871L37.8906 11.5195H39.3555L36.8828 18H35.3945ZM44.3945 18L44.1191 17.0977H44.0723C43.7598 17.4922 43.4453 17.7617 43.1289 17.9062C42.8125 18.0469 42.4062 18.1172 41.9102 18.1172C41.2734 18.1172 40.7754 17.9453 40.416 17.6016C40.0605 17.2578 39.8828 16.7715 39.8828 16.1426C39.8828 15.4746 40.1309 14.9707 40.627 14.6309C41.123 14.291 41.8789 14.1055 42.8945 14.0742L44.0137 14.0391V13.6934C44.0137 13.2793 43.916 12.9707 43.7207 12.7676C43.5293 12.5605 43.2305 12.457 42.8242 12.457C42.4922 12.457 42.1738 12.5059 41.8691 12.6035C41.5645 12.7012 41.2715 12.8164 40.9902 12.9492L40.5449 11.9648C40.8965 11.7812 41.2812 11.6426 41.6992 11.5488C42.1172 11.4512 42.5117 11.4023 42.8828 11.4023C43.707 11.4023 44.3281 11.582 44.7461 11.9414C45.168 12.3008 45.3789 12.8652 45.3789 13.6348V18H44.3945ZM42.3438 17.0625C42.8438 17.0625 43.2441 16.9238 43.5449 16.6465C43.8496 16.3652 44.002 15.9727 44.002 15.4688V14.9062L43.1699 14.9414C42.5215 14.9648 42.0488 15.0742 41.752 15.2695C41.459 15.4609 41.3125 15.7559 41.3125 16.1543C41.3125 16.4434 41.3984 16.668 41.5703 16.8281C41.7422 16.9844 42 17.0625 42.3438 17.0625ZM48.6777 18H47.3008V11.5195H48.6777V18ZM47.2188 9.80273C47.2188 9.55664 47.2852 9.36719 47.418 9.23438C47.5547 9.10156 47.748 9.03516 47.998 9.03516C48.2402 9.03516 48.4277 9.10156 48.5605 9.23438C48.6973 9.36719 48.7656 9.55664 48.7656 9.80273C48.7656 10.0371 48.6973 10.2227 48.5605 10.3594C48.4277 10.4922 48.2402 10.5586 47.998 10.5586C47.748 10.5586 47.5547 10.4922 47.418 10.3594C47.2852 10.2227 47.2188 10.0371 47.2188 9.80273ZM52.0293 18H50.6523V8.88281H52.0293V18ZM58.0586 18L57.7832 17.0977H57.7363C57.4238 17.4922 57.1094 17.7617 56.793 17.9062C56.4766 18.0469 56.0703 18.1172 55.5742 18.1172C54.9375 18.1172 54.4395 17.9453 54.0801 17.6016C53.7246 17.2578 53.5469 16.7715 53.5469 16.1426C53.5469 15.4746 53.7949 14.9707 54.291 14.6309C54.7871 14.291 55.543 14.1055 56.5586 14.0742L57.6777 14.0391V13.6934C57.6777 13.2793 57.5801 12.9707 57.3848 12.7676C57.1934 12.5605 56.8945 12.457 56.4883 12.457C56.1562 12.457 55.8379 12.5059 55.5332 12.6035C55.2285 12.7012 54.9355 12.8164 54.6543 12.9492L54.209 11.9648C54.5605 11.7812 54.9453 11.6426 55.3633 11.5488C55.7812 11.4512 56.1758 11.4023 56.5469 11.4023C57.3711 11.4023 57.9922 11.582 58.4102 11.9414C58.832 12.3008 59.043 12.8652 59.043 13.6348V18H58.0586ZM56.0078 17.0625C56.5078 17.0625 56.9082 16.9238 57.209 16.6465C57.5137 16.3652 57.666 15.9727 57.666 15.4688V14.9062L56.834 14.9414C56.1855 14.9648 55.7129 15.0742 55.416 15.2695C55.123 15.4609 54.9766 15.7559 54.9766 16.1543C54.9766 16.4434 55.0625 16.668 55.2344 16.8281C55.4062 16.9844 55.6641 17.0625 56.0078 17.0625ZM64.2754 11.4023C65.084 11.4023 65.7129 11.6953 66.1621 12.2812C66.6152 12.8672 66.8418 13.6895 66.8418 14.748C66.8418 15.8105 66.6133 16.6387 66.1562 17.2324C65.6992 17.8223 65.0645 18.1172 64.252 18.1172C63.4316 18.1172 62.7949 17.8223 62.3418 17.2324H62.248L61.9961 18H60.9648V8.88281H62.3418V11.0508C62.3418 11.2109 62.334 11.4492 62.3184 11.7656C62.3027 12.082 62.291 12.2832 62.2832 12.3691H62.3418C62.7793 11.7246 63.4238 11.4023 64.2754 11.4023ZM63.918 12.5273C63.3633 12.5273 62.9629 12.6914 62.7168 13.0195C62.4746 13.3438 62.3496 13.8887 62.3418 14.6543V14.748C62.3418 15.5371 62.4668 16.1094 62.7168 16.4648C62.9668 16.8164 63.375 16.9922 63.9414 16.9922C64.4297 16.9922 64.7988 16.7988 65.0488 16.4121C65.3027 16.0254 65.4297 15.4668 65.4297 14.7363C65.4297 13.2637 64.9258 12.5273 63.918 12.5273ZM69.8184 18H68.4414V8.88281H69.8184V18ZM74.623 18.1172C73.6152 18.1172 72.8262 17.8242 72.2559 17.2383C71.6895 16.6484 71.4062 15.8379 71.4062 14.8066C71.4062 13.748 71.6699 12.916 72.1973 12.3105C72.7246 11.7051 73.4492 11.4023 74.3711 11.4023C75.2266 11.4023 75.9023 11.6621 76.3984 12.1816C76.8945 12.7012 77.1426 13.416 77.1426 14.3262V15.0703H72.8242C72.8438 15.6992 73.0137 16.1836 73.334 16.5234C73.6543 16.8594 74.1055 17.0273 74.6875 17.0273C75.0703 17.0273 75.4258 16.9922 75.7539 16.9219C76.0859 16.8477 76.4414 16.7266 76.8203 16.5586V17.6777C76.4844 17.8379 76.1445 17.9512 75.8008 18.0176C75.457 18.084 75.0645 18.1172 74.623 18.1172ZM74.3711 12.4453C73.9336 12.4453 73.582 12.584 73.3164 12.8613C73.0547 13.1387 72.8984 13.543 72.8477 14.0742H75.7891C75.7812 13.5391 75.6523 13.1348 75.4023 12.8613C75.1523 12.584 74.8086 12.4453 74.3711 12.4453Z"
                      fill="black"
                    />
                  </svg>
                </div>
                <div
                  className="card-taken"
                  style={{ display: takenBooks.find((i) => i.id === item.id) ? 'block' : 'none' }}
                >
                  <svg
                    width="100"
                    height="26"
                    viewBox="0 0 100 26"
                    fill="none"
                    xmlns="http://www.w3.org/2000/svg"
                  >
                    <rect
                      x="1"
                      y="1"
                      width="98"
                      height="24"
                      rx="12"
                      fill="white"
                      stroke="#FF5D4F"
                      strokeWidth="2"
                    />
                    <path
                      d="M36.0898 18H34.6895V10.6348H32.1699V9.43359H38.6094V10.6348H36.0898V18ZM43.8359 18L43.5605 17.0977H43.5137C43.2012 17.4922 42.8867 17.7617 42.5703 17.9062C42.2539 18.0469 41.8477 18.1172 41.3516 18.1172C40.7148 18.1172 40.2168 17.9453 39.8574 17.6016C39.502 17.2578 39.3242 16.7715 39.3242 16.1426C39.3242 15.4746 39.5723 14.9707 40.0684 14.6309C40.5645 14.291 41.3203 14.1055 42.3359 14.0742L43.4551 14.0391V13.6934C43.4551 13.2793 43.3574 12.9707 43.1621 12.7676C42.9707 12.5605 42.6719 12.457 42.2656 12.457C41.9336 12.457 41.6152 12.5059 41.3105 12.6035C41.0059 12.7012 40.7129 12.8164 40.4316 12.9492L39.9863 11.9648C40.3379 11.7812 40.7227 11.6426 41.1406 11.5488C41.5586 11.4512 41.9531 11.4023 42.3242 11.4023C43.1484 11.4023 43.7695 11.582 44.1875 11.9414C44.6094 12.3008 44.8203 12.8652 44.8203 13.6348V18H43.8359ZM41.7852 17.0625C42.2852 17.0625 42.6855 16.9238 42.9863 16.6465C43.291 16.3652 43.4434 15.9727 43.4434 15.4688V14.9062L42.6113 14.9414C41.9629 14.9648 41.4902 15.0742 41.1934 15.2695C40.9004 15.4609 40.7539 15.7559 40.7539 16.1543C40.7539 16.4434 40.8398 16.668 41.0117 16.8281C41.1836 16.9844 41.4414 17.0625 41.7852 17.0625ZM48.0723 14.5781L48.8516 13.6055L50.8086 11.5195H52.3965L49.7891 14.3027L52.5605 18H50.9434L48.8633 15.1582L48.1074 15.7793V18H46.7422V8.88281H48.1074V13.3301L48.0371 14.5781H48.0723ZM56.4395 18.1172C55.4316 18.1172 54.6426 17.8242 54.0723 17.2383C53.5059 16.6484 53.2227 15.8379 53.2227 14.8066C53.2227 13.748 53.4863 12.916 54.0137 12.3105C54.541 11.7051 55.2656 11.4023 56.1875 11.4023C57.043 11.4023 57.7188 11.6621 58.2148 12.1816C58.7109 12.7012 58.959 13.416 58.959 14.3262V15.0703H54.6406C54.6602 15.6992 54.8301 16.1836 55.1504 16.5234C55.4707 16.8594 55.9219 17.0273 56.5039 17.0273C56.8867 17.0273 57.2422 16.9922 57.5703 16.9219C57.9023 16.8477 58.2578 16.7266 58.6367 16.5586V17.6777C58.3008 17.8379 57.9609 17.9512 57.6172 18.0176C57.2734 18.084 56.8809 18.1172 56.4395 18.1172ZM56.1875 12.4453C55.75 12.4453 55.3984 12.584 55.1328 12.8613C54.8711 13.1387 54.7148 13.543 54.6641 14.0742H57.6055C57.5977 13.5391 57.4688 13.1348 57.2188 12.8613C56.9688 12.584 56.625 12.4453 56.1875 12.4453ZM66.2246 18H64.8418V14.0156C64.8418 13.5156 64.7402 13.1426 64.5371 12.8965C64.3379 12.6504 64.0195 12.5273 63.582 12.5273C63 12.5273 62.5742 12.6992 62.3047 13.043C62.0352 13.3867 61.9004 13.9629 61.9004 14.7715V18H60.5234V11.5195H61.6016L61.7949 12.3691H61.8652C62.0605 12.0605 62.3379 11.8223 62.6973 11.6543C63.0566 11.4863 63.4551 11.4023 63.8926 11.4023C65.4473 11.4023 66.2246 12.1934 66.2246 13.7754V18Z"
                      fill="black"
                    />
                  </svg>
                </div>
                <h2>{item.name.includes(':') ? item.name.match(/[^:]*/) : item.name}</h2>
                <h3>{item.author}</h3>
                <div className="card-footer">
                  <ul className="card-stars">
                    <li>
                      <svg
                        width="21"
                        height="19"
                        viewBox="0 0 21 19"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M9.57885 0.92705C9.87821 0.00573897 11.1816 0.00573993 11.481 0.927051L13.1051 5.92564C13.239 6.33766 13.6229 6.61662 14.0562 6.61662H19.312C20.2807 6.61662 20.6835 7.85624 19.8998 8.42564L15.6477 11.5149C15.2972 11.7696 15.1506 12.221 15.2845 12.633L16.9086 17.6316C17.2079 18.5529 16.1535 19.319 15.3697 18.7496L11.1177 15.6603C10.7672 15.4057 10.2926 15.4057 9.94213 15.6603L5.69007 18.7496C4.90635 19.319 3.85188 18.5529 4.15123 17.6316L5.77537 12.633C5.90924 12.221 5.76258 11.7696 5.4121 11.5149L1.16004 8.42564C0.376328 7.85624 0.779104 6.61662 1.74783 6.61662H7.00366C7.43688 6.61662 7.82084 6.33766 7.95471 5.92564L9.57885 0.92705Z"
                          fill="black"
                        />
                      </svg>
                    </li>
                    <li>
                      <svg
                        width="21"
                        height="19"
                        viewBox="0 0 21 19"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M9.57885 0.92705C9.87821 0.00573897 11.1816 0.00573993 11.481 0.927051L13.1051 5.92564C13.239 6.33766 13.6229 6.61662 14.0562 6.61662H19.312C20.2807 6.61662 20.6835 7.85624 19.8998 8.42564L15.6477 11.5149C15.2972 11.7696 15.1506 12.221 15.2845 12.633L16.9086 17.6316C17.2079 18.5529 16.1535 19.319 15.3697 18.7496L11.1177 15.6603C10.7672 15.4057 10.2926 15.4057 9.94213 15.6603L5.69007 18.7496C4.90635 19.319 3.85188 18.5529 4.15123 17.6316L5.77537 12.633C5.90924 12.221 5.76258 11.7696 5.4121 11.5149L1.16004 8.42564C0.376328 7.85624 0.779104 6.61662 1.74783 6.61662H7.00366C7.43688 6.61662 7.82084 6.33766 7.95471 5.92564L9.57885 0.92705Z"
                          fill="black"
                        />
                      </svg>
                    </li>
                    <li>
                      <svg
                        width="21"
                        height="19"
                        viewBox="0 0 21 19"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M9.57885 0.92705C9.87821 0.00573897 11.1816 0.00573993 11.481 0.927051L13.1051 5.92564C13.239 6.33766 13.6229 6.61662 14.0562 6.61662H19.312C20.2807 6.61662 20.6835 7.85624 19.8998 8.42564L15.6477 11.5149C15.2972 11.7696 15.1506 12.221 15.2845 12.633L16.9086 17.6316C17.2079 18.5529 16.1535 19.319 15.3697 18.7496L11.1177 15.6603C10.7672 15.4057 10.2926 15.4057 9.94213 15.6603L5.69007 18.7496C4.90635 19.319 3.85188 18.5529 4.15123 17.6316L5.77537 12.633C5.90924 12.221 5.76258 11.7696 5.4121 11.5149L1.16004 8.42564C0.376328 7.85624 0.779104 6.61662 1.74783 6.61662H7.00366C7.43688 6.61662 7.82084 6.33766 7.95471 5.92564L9.57885 0.92705Z"
                          fill="black"
                        />
                      </svg>
                    </li>
                    <li>
                      <svg
                        width="21"
                        height="19"
                        viewBox="0 0 21 19"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M9.57885 0.92705C9.87821 0.00573897 11.1816 0.00573993 11.481 0.927051L13.1051 5.92564C13.239 6.33766 13.6229 6.61662 14.0562 6.61662H19.312C20.2807 6.61662 20.6835 7.85624 19.8998 8.42564L15.6477 11.5149C15.2972 11.7696 15.1506 12.221 15.2845 12.633L16.9086 17.6316C17.2079 18.5529 16.1535 19.319 15.3697 18.7496L11.1177 15.6603C10.7672 15.4057 10.2926 15.4057 9.94213 15.6603L5.69007 18.7496C4.90635 19.319 3.85188 18.5529 4.15123 17.6316L5.77537 12.633C5.90924 12.221 5.76258 11.7696 5.4121 11.5149L1.16004 8.42564C0.376328 7.85624 0.779104 6.61662 1.74783 6.61662H7.00366C7.43688 6.61662 7.82084 6.33766 7.95471 5.92564L9.57885 0.92705Z"
                          fill="black"
                        />
                      </svg>
                    </li>
                    <li>
                      <svg
                        width="21"
                        height="19"
                        viewBox="0 0 21 19"
                        fill="none"
                        xmlns="http://www.w3.org/2000/svg"
                      >
                        <path
                          d="M9.57885 0.92705C9.87821 0.00573897 11.1816 0.00573993 11.481 0.927051L13.1051 5.92564C13.239 6.33766 13.6229 6.61662 14.0562 6.61662H19.312C20.2807 6.61662 20.6835 7.85624 19.8998 8.42564L15.6477 11.5149C15.2972 11.7696 15.1506 12.221 15.2845 12.633L16.9086 17.6316C17.2079 18.5529 16.1535 19.319 15.3697 18.7496L11.1177 15.6603C10.7672 15.4057 10.2926 15.4057 9.94213 15.6603L5.69007 18.7496C4.90635 19.319 3.85188 18.5529 4.15123 17.6316L5.77537 12.633C5.90924 12.221 5.76258 11.7696 5.4121 11.5149L1.16004 8.42564C0.376328 7.85624 0.779104 6.61662 1.74783 6.61662H7.00366C7.43688 6.61662 7.82084 6.33766 7.95471 5.92564L9.57885 0.92705Z"
                          fill="black"
                        />
                      </svg>
                    </li>
                  </ul>
                  <button
                    className="card-order"
                    type="button"
                    onClick={(e) => {
                      e.preventDefault();
                      takenBooks.find((i) => i.id === item.id)
                        ? dispatch({ type: 'WAITING_FOR_BOOKS', payload: item })
                        : dispatch({ type: 'TAKE_BOOKS', payload: item });
                    }}
                  >
                    Order
                  </button>
                </div>
              </div>
            </div>
          </div>
        ))}
      </div>
      <div className="all-books-btn">
        <button type="button" onClick={showMore}>
          {!expanded ? 'Show more' : 'Hide'}
        </button>
      </div>
    </div>
  );
};

export default AllBooks;
